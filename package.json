{
  "name": "com.unity.dt.app-ui",
  "displayName": "App UI",
  "version": "2.0.0-pre.10",
  "unity": "2021.3",
  "category": "UI",
  "keywords": [
    "app",
    "ui",
    "components",
    "runtime",
    "framework",
    "navigation",
    "dependency-injection",
    "mvvm",
    "undostack",
    "redux",
    "state-management",
    "dark-theme",
    "data-binding",
    "cloud",
    "unity",
    "app-ui"
  ],
  "description": "App UI is a versatile and customizable UI library for Unity that provides essential building blocks for creating beautiful and responsive user interfaces. With support for MVVM architecture, state management, and localization, App UI simplifies app development while maintaining flexibility and extensibility. The library includes a wide range of UI components, design tokens, and symbols, all of which can be easily customized to fit your app's unique style and branding.",
  "dependencies": {
    "com.unity.modules.androidjni": "1.0.0",
    "com.unity.modules.uielements": "1.0.0",
    "com.unity.modules.physics": "1.0.0",
    "com.unity.modules.screencapture": "1.0.0"
  },
  "samples": [
    {
      "displayName": "Drag And Drop",
      "description": "Example of drag and drop system using App UI DropZone component and Dragger/DropTarget manipulators",
      "path": "Samples~/Drag And Drop"
    },
    {
      "displayName": "UI Kit",
      "description": "Every component in a single page",
      "path": "Samples~/UI Kit"
    },
    {
      "displayName": "StoryBook",
      "description": "StoryBookJS-like window in the Editor",
      "path": "Samples~/StoryBook"
    },
    {
      "displayName": "Navigation",
      "description": "Navigation system",
      "path": "Samples~/Navigation"
    },
    {
      "displayName": "MVVM",
      "description": "Example that showcases the MVVM pattern with dependency injection",
      "path": "Samples~/MVVM"
    },
    {
      "displayName": "Redux",
      "description": "Example of state management with Redux",
      "path": "Samples~/Redux"
    },
    {
      "displayName": "MVVM And Redux",
      "description": "Example that showcases the MVVM pattern with dependency injection and state management with Redux",
      "path": "Samples~/MVVM And Redux"
    },
    {
      "displayName": "UndoRedo",
      "description": "Example of undo/redo system",
      "path": "Samples~/UndoRedo"
    },
    {
      "displayName": "Trackpad",
      "description": "Example of Trackpad gesture recognition",
      "path": "Samples~/Trackpad"
    }
  ],
  "_upm": {
    "changelog": "### Changed\n\n- Renamed `IUIToolkitApp.mainPage` property into `IUIToolkitApp.rootVisualElement` for more clarity.\n- Storybook stories are now sorted alphabetically.\n\n### Added\n\n- Added `IApp.services` property which returns the current `IServiceProvider` available for this instance of `IApp`. Thanks to this property you should be able to load a service from anywhere in your application by calling `App.current.services`.\n- Added `LangContext.GetLocalizedStringAsyncFunc` to delegate the localization operation to a user-defined function.\n- Added `IInitializableComponent` interface to `IApp` interface. Now when initializing a MVVM `App` object, the related `AppBuilder` will call `app.InitializeComponent` before hosting.\n- Added `SelectedLocaleListener` manipulator that reacts to Localization Package's SelectedLocale changes in order to provide a new `LangContext` in the visual tree.\n- Added `NavHost.makeScreen` property. By setting your own callback to this property, you will be able to customize the way to instantiate a `NavigationScreen` when navigating to a new destination. This can be useful when coupled to Dependency Injection so you can retreive instances of your screens from a `IServiceProvider`. By default, the property is set with the use of `System.Activator.CreateInstance`.\n- Added some warning messages (Standalone builds only) when a LocalizedTextElement value cannot be localized.\n\n### Fixed\n\n- Fixed notify property changes for Picker.selectedIndex.\n- Fixed path resolution of Stylesheets coming from Packages in Icon Browser tool.\n- Fixed a regression where components using `Pressable` manipulator will not able to be clicked more than once if the cursor doesn't leave the component's layout rect.\n- Fixed NullReferenceException thrown when fetching Localization tables.\n- Fixed Screen Height calculation. UITK does not use Camera rect but blit on the whole screen instead.\n- Fixed `InvalidOperationException` thrown by the damping effect animation of the `Canvas` component.\n- Fixed the calculation of off-screen items in SwipeView with vertical direction."
  },
  "upmCi": {
    "footprint": "b346eb1a8150d90011e875e4f94e7c91baf1b459"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.dt.app-ui@2.0/manual/index.html",
  "repository": {
    "url": "https://github.com/Unity-Technologies/unity-app-ui.git",
    "type": "git",
    "revision": "a04906b91b03e35a23ebb1c80219709f15d6ca40"
  },
  "_fingerprint": "562079a7bdc978c15b452cd58d0c390359f4f397"
}
