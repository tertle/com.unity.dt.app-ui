<?xml version="1.0" encoding="utf-8"?>
<engine:UXML
  xmlns:engine="UnityEngine.UIElements"
  xmlns:appui="Unity.AppUI.UI"
  xmlns:navigation="Unity.AppUI.Navigation"
>
  <engine:VisualElement name="Unity.AppUI.UI.SearchBar" class="main">
    <engine:Label text="SearchBar" class="title" />
    <engine:Label
      text="A search input field with a magnifying glass icon that allows users to enter search queries."
      class="subtitle"
    />
    <engine:Label text="input" class="category" />
    <engine:VisualElement class="content">
      <engine:VisualElement class="section">
        <engine:VisualElement class="overview">
          <engine:Label
            text="The SearchBar component is a specialized TextField that provides a dedicated interface for search functionality. It comes with a built-in magnifying glass icon and placeholder text, making it instantly recognizable as a search input."
            class="parapgraph"
          />
          <engine:Label
            text="By default, the SearchBar displays a magnifying glass icon on the left side and includes a 'Search...' placeholder text, providing clear affordance for its purpose."
            class="parapgraph"
          />
          <engine:Label
            text="The SearchBar inherits from TextField, which means it includes all TextField functionality including validation, size variants, and read-only states."
            class="parapgraph"
          />
          <engine:Label
            text="SearchBars are commonly used in:"
            class="parapgraph"
          />
          <engine:Label
            text="- Navigation menus to filter items
- Data tables to search through records
- Document libraries to find specific files
- Any interface where users need to search through content"
            class="parapgraph"
          />
        </engine:VisualElement>
      </engine:VisualElement>
      <engine:VisualElement class="section">
        <engine:VisualElement class="props">
          <engine:VisualElement class="prop">
            <engine:Label text="leadingIconName" class="prop-name" />
            <engine:Label text="string" class="prop-type" />
            <engine:Label text="magnifying-glass" class="prop-value" />
            <engine:Label text="True" class="prop-code-support support" />
            <engine:Label text="True" class="prop-uxml-support support" />
            <engine:VisualElement class="prop-description">
              <engine:Label
                text="The name of the icon displayed on the left side of the search bar. By default, it shows a magnifying glass icon."
                class="parapgraph"
              />
            </engine:VisualElement>
            <engine:VisualElement class="prop-examples">
              <engine:VisualElement class="example">
                <engine:Label
                  text="Customizing the leading icon"
                  class="scenario-description"
                />
                <engine:Label
                  text='&lt;SearchBar leading-icon-name="search-alt" /&gt;'
                  class="code"
                />
              </engine:VisualElement>
            </engine:VisualElement>
          </engine:VisualElement>
          <engine:VisualElement class="prop">
            <engine:Label text="placeholder" class="prop-name" />
            <engine:Label text="string" class="prop-type" />
            <engine:Label text="Search..." class="prop-value" />
            <engine:Label text="True" class="prop-code-support support" />
            <engine:Label text="True" class="prop-uxml-support support" />
            <engine:VisualElement class="prop-description">
              <engine:Label
                text="The placeholder text displayed when the search bar is empty."
                class="parapgraph"
              />
            </engine:VisualElement>
            <engine:VisualElement class="prop-examples">
              <engine:VisualElement class="example">
                <engine:Label
                  text="Customizing the placeholder text"
                  class="scenario-description"
                />
                <engine:Label
                  text='&lt;SearchBar placeholder="Search files..." /&gt;'
                  class="code"
                />
              </engine:VisualElement>
            </engine:VisualElement>
          </engine:VisualElement>
          <engine:VisualElement class="prop">
            <engine:Label text="size" class="prop-name" />
            <engine:Label text="Size" class="prop-type" />
            <engine:Label text="Size.M" class="prop-value" />
            <engine:Label text="True" class="prop-code-support support" />
            <engine:Label text="True" class="prop-uxml-support support" />
            <engine:VisualElement class="prop-description">
              <engine:Label
                text="The size variant of the search bar. Available options are S (Small), M (Medium), and L (Large)."
                class="parapgraph"
              />
            </engine:VisualElement>
            <engine:VisualElement class="prop-examples">
              <engine:VisualElement class="example">
                <engine:Label
                  text="Different size variants"
                  class="scenario-description"
                />
                <engine:Label
                  text='&lt;SearchBar size="S" /&gt;
&lt;SearchBar size="M" /&gt;
&lt;SearchBar size="L" /&gt;'
                  class="code"
                />
              </engine:VisualElement>
            </engine:VisualElement>
          </engine:VisualElement>
        </engine:VisualElement>
      </engine:VisualElement>
      <engine:VisualElement class="section">
        <engine:VisualElement class="examples">
          <engine:VisualElement class="example">
            <engine:Label text="Basic Usage" class="parapgraph" />
            <engine:Label
              text='// Creating a basic search bar
var searchBar = new SearchBar();
searchBar.RegisterValueChangedCallback(evt =&gt; {
    Debug.Log($"Search query: {evt.newValue}");
});'
              class="code"
            />
          </engine:VisualElement>
          <engine:VisualElement class="example">
            <engine:Label text="Search with Validation" class="parapgraph" />
            <engine:Label
              text='var searchBar = new SearchBar();
// Add validation to ensure minimum search length
searchBar.validateValue = (value) =&gt; value.Length &gt;= 3;
searchBar.placeholder = "Enter at least 3 characters...";'
              class="code"
            />
          </engine:VisualElement>
          <engine:VisualElement class="example">
            <engine:Label text="UXML Usage" class="parapgraph" />
            <engine:Label
              text='&lt;ui:UXML xmlns:ui="UnityEngine.UIElements" xmlns:appui="Unity.AppUI.UI"&gt;
    &lt;appui:SearchBar size="M"
                     placeholder="Search documents..."
                     leading-icon-name="magnifying-glass" /&gt;
&lt;/ui:UXML&gt;'
              class="code"
            />
          </engine:VisualElement>
          <engine:VisualElement class="example">
            <engine:Label
              text="Complete Search Implementation"
              class="parapgraph"
            />
            <engine:Label
              text='public class SearchableList : VisualElement
{
    private SearchBar searchBar;
    private ListView listView;
    private List&lt;string&gt; allItems;

    public SearchableList()
    {
        // Create and configure search bar
        searchBar = new SearchBar();
        searchBar.placeholder = "Search items...";
        searchBar.size = Size.M;

        // Handle search input
        searchBar.RegisterValueChangedCallback(OnSearchQueryChanged);

        // Add to visual hierarchy
        Add(searchBar);

        // Initialize list view...
    }

    private void OnSearchQueryChanged(ChangeEvent&lt;string&gt; evt)
    {
        var query = evt.newValue.ToLower();
        var filteredItems = allItems
            .Where(item =&gt; item.ToLower().Contains(query))
            .ToList();
        listView.itemsSource = filteredItems;
    }
}'
              class="code"
            />
          </engine:VisualElement>
        </engine:VisualElement>
      </engine:VisualElement>
    </engine:VisualElement>
  </engine:VisualElement>
</engine:UXML>
