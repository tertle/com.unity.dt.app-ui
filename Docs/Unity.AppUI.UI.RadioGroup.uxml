<?xml version="1.0" encoding="utf-8"?>
<engine:UXML
  xmlns:engine="UnityEngine.UIElements"
  xmlns:appui="Unity.AppUI.UI"
  xmlns:navigation="Unity.AppUI.Navigation"
>
  <engine:VisualElement name="Unity.AppUI.UI.RadioGroup" class="main">
    <engine:Label text="RadioGroup" class="title" />
    <engine:Label
      text="A container component that manages a set of radio buttons, allowing users to select one option from multiple choices."
      class="subtitle"
    />
    <engine:Label text="input" class="category" />
    <engine:VisualElement class="content">
      <engine:VisualElement class="section">
        <engine:VisualElement class="overview">
          <engine:Label
            text="RadioGroup is a form control that manages a group of Radio buttons, ensuring that only one option can be selected at a time. It's commonly used in forms and settings interfaces where users need to choose exactly one option from a set of mutually exclusive choices."
            class="parapgraph"
          />
          <engine:Label
            text="The RadioGroup automatically handles the mutual exclusivity of its Radio children - when one radio button is selected, all others in the group are automatically deselected."
            class="parapgraph"
          />
          <engine:Label
            text="NOTE: Each Radio element within the group must have a unique 'key' property to function properly."
            class="parapgraph"
          />
        </engine:VisualElement>
      </engine:VisualElement>
      <engine:VisualElement class="section">
        <engine:VisualElement class="props">
          <engine:VisualElement class="prop">
            <engine:Label text="value" class="prop-name" />
            <engine:Label text="string" class="prop-type" />
            <engine:Label text="null" class="prop-value" />
            <engine:Label text="True" class="prop-code-support support" />
            <engine:Label text="True" class="prop-uxml-support support" />
            <engine:VisualElement class="prop-description">
              <engine:Label
                text="The key of the currently selected radio button in the group. The value corresponds to the 'key' property of the selected Radio element."
                class="parapgraph"
              />
            </engine:VisualElement>
            <engine:VisualElement class="prop-examples">
              <engine:VisualElement class="example">
                <engine:Label
                  text="Setting the selected radio button programmatically:"
                  class="parapgraph"
                />
                <engine:Label
                  text='Select a radio button with key "option1"'
                  class="scenario-description"
                />
                <engine:Label
                  text='radioGroup.value = "option1";'
                  class="code"
                />
              </engine:VisualElement>
            </engine:VisualElement>
          </engine:VisualElement>
          <engine:VisualElement class="prop">
            <engine:Label text="invalid" class="prop-name" />
            <engine:Label text="bool" class="prop-type" />
            <engine:Label text="false" class="prop-value" />
            <engine:Label text="True" class="prop-code-support support" />
            <engine:Label text="True" class="prop-uxml-support support" />
            <engine:VisualElement class="prop-description">
              <engine:Label
                text="Indicates whether the current selection is invalid based on the validation rules."
                class="parapgraph"
              />
            </engine:VisualElement>
            <engine:VisualElement class="prop-examples">
              <engine:VisualElement class="example">
                <engine:Label
                  text="Mark the radio group as invalid"
                  class="scenario-description"
                />
                <engine:Label text="radioGroup.invalid = true;" class="code" />
              </engine:VisualElement>
            </engine:VisualElement>
          </engine:VisualElement>
          <engine:VisualElement class="prop">
            <engine:Label text="validateValue" class="prop-name" />
            <engine:Label text="Func&lt;string, bool&gt;" class="prop-type" />
            <engine:Label text="null" class="prop-value" />
            <engine:Label text="True" class="prop-code-support support" />
            <engine:Label text="False" class="prop-uxml-support support" />
            <engine:VisualElement class="prop-description">
              <engine:Label
                text="A function that validates the selected value. Returns true if the value is valid, false otherwise."
                class="parapgraph"
              />
            </engine:VisualElement>
            <engine:VisualElement class="prop-examples">
              <engine:VisualElement class="example">
                <engine:Label
                  text="Add validation to ensure a value is selected"
                  class="scenario-description"
                />
                <engine:Label
                  text="radioGroup.validateValue = (value) =&gt; !string.IsNullOrEmpty(value);"
                  class="code"
                />
              </engine:VisualElement>
            </engine:VisualElement>
          </engine:VisualElement>
        </engine:VisualElement>
      </engine:VisualElement>
      <engine:VisualElement class="section">
        <engine:VisualElement class="examples">
          <engine:VisualElement class="example">
            <engine:Label
              text="Basic RadioGroup with multiple options:"
              class="parapgraph"
            />
            <engine:Label
              text="Creating a simple radio group with three options"
              class="scenario-description"
            />
            <engine:Label
              text='&lt;UXML&gt;
&lt;RadioGroup&gt;
    &lt;Radio key="option1" label="Option 1" /&gt;
    &lt;Radio key="option2" label="Option 2" /&gt;
    &lt;Radio key="option3" label="Option 3" /&gt;
&lt;/RadioGroup&gt;'
              class="code"
            />
          </engine:VisualElement>
          <engine:VisualElement class="example">
            <engine:Label
              text="RadioGroup with validation and event handling:"
              class="parapgraph"
            />
            <engine:Label
              text="Creating a radio group programmatically with validation and change event handling"
              class="scenario-description"
            />
            <engine:Label
              text='var radioGroup = new RadioGroup();

// Add radio buttons
var radio1 = new Radio { key = "small", label = "Small" };
var radio2 = new Radio { key = "medium", label = "Medium" };
var radio3 = new Radio { key = "large", label = "Large" };

radioGroup.Add(radio1);
radioGroup.Add(radio2);
radioGroup.Add(radio3);

// Add validation
radioGroup.validateValue = (value) =&gt; value != "large";

// Listen for changes
radioGroup.RegisterValueChangedCallback(evt =&gt; {
    Debug.Log($"Selected size: {evt.newValue}");
});'
              class="code"
            />
          </engine:VisualElement>
          <engine:VisualElement class="example">
            <engine:Label
              text="RadioGroup with default selection and styling:"
              class="parapgraph"
            />
            <engine:Label
              text="Creating a radio group with a pre-selected option and styled radio buttons"
              class="scenario-description"
            />
            <engine:Label
              text='&lt;UXML&gt;
&lt;RadioGroup value="option2"&gt;
    &lt;Radio key="option1" label="Standard" size="M" /&gt;
    &lt;Radio key="option2" label="Premium" size="M" emphasized="true" /&gt;
    &lt;Radio key="option3" label="Enterprise" size="M" /&gt;
&lt;/RadioGroup&gt;'
              class="code"
            />
          </engine:VisualElement>
        </engine:VisualElement>
      </engine:VisualElement>
    </engine:VisualElement>
  </engine:VisualElement>
</engine:UXML>
